{"version":3,"sources":["components/Conversion.js","components/CoversionsView.js","App.js","reportWebVitals.js","index.js"],"names":["ConversionItem","props","style","fontWeight","todo","Amount","Price","Coin","onClick","axios","delete","then","res","console","log","data","className","ConversionView","todoList","map","Conversion","App","useState","setTodoList","addy","setAddy","erc","setERC","coin","setCoin","useEffect","get","styleName","id","name","event","target","value","onChange","placeholder","post","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAmBeA,MAhBf,SAAwBC,GAKpB,OACI,8BACI,8BACI,uBAAMC,MAAO,CAAEC,WAAY,mBAA3B,UAAiDF,EAAMG,KAAKC,OAA5D,SADJ,KACoFJ,EAAMG,KAAKE,MAD/F,MACyGL,EAAMG,KAAKG,KAChH,wBAAQC,QAAS,kBARID,EAQ0BN,EAAMG,KAAKG,UAPtEE,IAAMC,OAAN,+CAAqDH,IAChDI,MAAK,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAIG,SAFD,IAACR,GAQ4CS,UAAU,mCAAmCd,MAAO,CAAC,aAAe,QAArI,eACA,6BCXD,SAASe,EAAehB,GACnC,OACI,8BACI,6BACKA,EAAMiB,SAASC,KAAI,SAAAf,GAAI,OAAI,cAACgB,EAAD,CAAgBhB,KAAMA,W,MCkEnDiB,MAjEf,WAEE,MAAgCC,mBAAS,CAAC,KAA1C,mBAAOJ,EAAP,KAAiBK,EAAjB,KACA,EAAwBD,mBAAS,IAAjC,mBAAOE,EAAP,KAAaC,EAAb,KACA,EAAsBH,mBAAS,IAA/B,mBAAOI,EAAP,KAAYC,EAAZ,KACA,EAAwBL,mBAAS,IAAjC,mBAAOM,EAAP,KAAaC,EAAb,KAgBA,OAZAC,qBAAU,WACRrB,IAAMsB,IAAI,wCACPpB,MAAK,SAAAC,GACJW,EAAYX,EAAIG,YAUpB,sBAAKC,UAAU,yEAAyEd,MAAO,CAAC,MAAQ,QAAS,gBAAkB,QAAS,UAAY,QAAxJ,UACE,oBAAIc,UAAU,kCAAkCgB,UAAU,oBAA1D,8BACD,sBAAKhB,UAAU,YAAf,UACC,uBAAMA,UAAU,YAAhB,UACE,yBAAQA,UAAU,4BAA4BiB,GAAI,SAASC,KAAK,SAAS1B,QAAS,SAAA2B,GAAK,OAAIR,EAAOQ,EAAMC,OAAOC,QAA/G,UACE,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,WAAd,yBAEF,8BACW,UAARX,GACC,wBAAQV,UAAU,4BAA4BR,QAAS,SAAA2B,GAAK,OAAIN,EAAQM,EAAMC,OAAOC,QAArF,SACA,wBAAQA,MAAM,MAAd,0BAIJ,8BACW,QAARX,GACC,wBAAQV,UAAU,4BAA4BR,QAAS,SAAA2B,GAAK,OAAIN,EAAQM,EAAMC,OAAOC,QAArF,SACA,wBAAQA,MAAM,UAAd,yBAIJ,8BACW,aAARX,GACC,yBAAQV,UAAU,4BAA4BR,QAAS,SAAA2B,GAAK,OAAIN,EAAQM,EAAMC,OAAOC,QAArF,UACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,2BAIJ,uBAAOrB,UAAU,0BAA0BsB,SAAU,SAAAH,GAAK,OAAIV,EAAQU,EAAMC,OAAOC,QAAUE,YAAY,YAC3G,wBAAQvB,UAAU,oCAAoCd,MAAO,CAAC,aAAe,OAAO,cAAc,QAAUM,QArCzF,WACrBC,IAAM+B,KAAK,wCAAyC,CAAC,QAAWhB,EAAM,MAAUE,EAAK,KAASE,IAC3FjB,MAAK,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAmCzB,wBAEA,oBAAII,UAAU,+BAAd,8BACA,8BACA,cAAC,EAAD,CAAUE,SAAUA,aCrDXuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d630f392.chunk.js","sourcesContent":["import axios from 'axios'\nimport React from 'react'\n\nfunction ConversionItem(props) {\n    const deleteConversionHandler = (Coin) => {\n    axios.delete(`http://localhost:8000/api/conversion/${Coin}`)\n        .then(res => console.log(res.data)) }\n  \n    return (\n        <div>\n            <p>\n                <span style={{ fontWeight: 'bold, underline' }}>{props.todo.Amount} = </span> ${props.todo.Price} : {props.todo.Coin}\n                <button onClick={() => deleteConversionHandler(props.todo.Coin)} className=\"btn btn-outline-danger my-2 mx-2\" style={{'borderRadius':'50px',}}>X</button>\n                <hr></hr>\n            </p>\n        </div>\n    )\n}\n\nexport default ConversionItem;","import ConversionItem from './Conversion'\n\nexport default function ConversionView(props) {\n    return (\n        <div>\n            <ul>\n                {props.todoList.map(todo => <ConversionItem todo={todo} />)}\n            </ul>\n        </div>\n    )\n}","import React, { useState, useEffect} from 'react';\nimport './App.css';\nimport TodoView from './components/CoversionsView';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \n\n\nfunction App() {\n\n  const [todoList, setTodoList] = useState([{}])\n  const [addy, setAddy] = useState('')\n  const [erc, setERC] = useState('')\n  const [coin, setCoin] = useState('')\n\n    \n\n  useEffect(() => {\n    axios.get('http://localhost:8000/api/conversion')\n      .then(res => {\n        setTodoList(res.data)\n      })\n    });\n\n  // Post a todo\n  const addTodoHandler = () => {\n    axios.post('http://localhost:8000/api/conversion/', {'Address': addy, 'Chain' : erc, 'Coin' : coin})\n      .then(res => console.log(res))\n  };\n  return (\n    <div className=\"App list-group-item  justify-content-center align-items-center mx-auto\" style={{\"width\":\"400px\", \"backgroundColor\":\"white\", \"marginTop\":\"15px\"}} >\n      <h1 className=\"card text-white bg-primary mb-1\" styleName=\"max-width: 20rem;\">Crypto Converter</h1>\n     <div className=\"card-body\">\n      <span className=\"card-text\"> \n        <select className=\"mb-2 form-control titleIn\" id =\"source\" name=\"source\" onClick={event => setERC(event.target.value)}>\n          <option value=\"ERC20\">ERC20</option>\n          <option value=\"BTC\">BTC</option>\n          <option value=\"Polkadot\">Polkadot</option>\n        </select>\n        <div>\n          {erc === 'ERC20' &&(\n            <select className=\"mb-2 form-control titleIn\" onClick={event => setCoin(event.target.value)}>\n            <option value=\"Eth\">Ethereum</option>\n          </select>\n          )}\n        </div>\n        <div>\n          {erc === 'BTC' &&(\n            <select className=\"mb-2 form-control titleIn\" onClick={event => setCoin(event.target.value)}>\n            <option value=\"Bitcoin\">Bitcoin</option>\n          </select>\n          )}\n        </div>\n        <div>\n          {erc === 'Polkadot' &&(\n            <select className=\"mb-2 form-control titleIn\" onClick={event => setCoin(event.target.value)}>\n            <option value=\"Polkadot\">Polkadot</option>\n            <option value=\"Moonbeam\">Moonbeam</option>\n          </select>\n          )}\n        </div>\n        <input className=\"mb-2 form-control desIn\" onChange={event => setAddy(event.target.value)}   placeholder='Address'/>\n      <button className=\"btn btn-outline-primary mx-2 mb-3\" style={{'borderRadius':'50px',\"font-weight\":\"bold\"}}  onClick={addTodoHandler}>Convert</button>\n      </span>\n      <h5 className=\"card text-white bg-dark mb-3\">Your Conversions</h5>\n      <div >\n      <TodoView todoList={todoList} />\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}